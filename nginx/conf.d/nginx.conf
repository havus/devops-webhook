# Source: https://www.digitalocean.com/community/tutorials/how-to-secure-a-containerized-node-js-application-with-nginx-let-s-encrypt-and-docker-compose#step-5-modifying-the-web-server-configuration-and-service-definition

# include snippets/ssl-domain.conf;
# include snippets/ssl-params.conf;
# include snippets/security-headers.conf;

server {
  listen 80;
  listen [::]:80;
  server_name wadaw.my.id;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/html;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name wadaw.my.id;

  include snippets/ssl-domain.conf;
  include snippets/ssl-params.conf;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  location / {
    try_files $uri @frontend_server;
  }

  location @frontend_server {
    proxy_pass http://frontend_server:8000;
    include snippets/security-headers.conf;
  }
}

server {
  listen 80;
  listen [::]:80;
  server_name backyard.wadaw.my.id;

  location ~ /.well-known/acme-challenge {
    allow all;
    root /var/www/html;
  }

  location / {
    return 301 https://$host$request_uri;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name backyard.wadaw.my.id;

  include snippets/ssl-domain.conf;
  include snippets/ssl-params.conf;

  root /var/www/html;
  index index.html index.htm index.nginx-debian.html;

  location / {
    try_files $uri @backend_server;
  }

  location @backend_server {
    proxy_pass http://backend_server:3000;
    include snippets/security-headers.conf;
  }
}
